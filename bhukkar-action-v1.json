{
  "name": "bhukkar-action",
  "type": "action",
  "counts": {
    "actions": 5,
    "intents": 2,
    "entities": 9,
    "data_types": 0,
    "collections": 0,
    "global_variables": 2
  },
  "status": "Available",
  "language": "en",
  "skill_id": "d64c5099-3cc3-4e97-83cc-6a74c1d8646c",
  "workspace": {
    "actions": [
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Welcome, how can I assist you?"
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_44014",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "digression_failure",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't confirm if you wanted to return to previous topic, let me connect to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "digression_failure",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Failed to confirm topic return"
                }
              ]
            },
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            },
            "next_step": "step_004"
          },
          {
            "step": "step_004",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_004",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Danger word detected"
                }
              ]
            },
            "next_step": "step_005"
          },
          {
            "step": "step_005",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_005",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Profanity detected"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "Topic return failed",
            "variable": "digression_failure",
            "data_type": "any"
          },
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          },
          {
            "title": "It seems this conversation would be best managed",
            "variable": "step_004",
            "data_type": "any"
          },
          {
            "title": "Profanity - It seems this conversation",
            "variable": "step_005",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "danger_word_detected",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. Please rephrase your question."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": ""
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_002_result_1"
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I am afraid I do not understand what you are asking, please re-p",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "variable": "step_002_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_250",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Hey there! Welcome to our service! I am bhukkar the foodbot, here to help you!\n\nMay I know your name?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_250",
            "next_step": "step_153"
          },
          {
            "step": "step_153",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Hi "
                          },
                          {
                            "skill_variable": "Name_input"
                          },
                          {
                            "scalar": "! What can I order for you?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Bengali cuisine",
                      "value": {
                        "input": {
                          "text": "Bengali cuisine"
                        }
                      }
                    },
                    {
                      "label": "North Indian cuisine",
                      "value": {
                        "input": {
                          "text": "North Indian cuisine"
                        }
                      }
                    },
                    {
                      "label": "South Indian cuisine",
                      "value": {
                        "input": {
                          "text": "South Indian cuisine"
                        }
                      }
                    },
                    {
                      "label": "Maharashtrian cuisine",
                      "value": {
                        "input": {
                          "text": "Maharashtrian cuisine"
                        }
                      }
                    },
                    {
                      "label": "Chinese cuisine",
                      "value": {
                        "input": {
                          "text": "Chinese cuisine"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "variable": "step_250"
                  },
                  "skill_variable": "Name_input"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_3290",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_153",
            "next_step": "step_570"
          },
          {
            "step": "step_570",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Following are our delicious Maharashtrian food:"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "title": "Puran Poli",
                  "source": "https://cookwithrenu.com/wp-content/uploads/2020/09/Puran-Poli_1.jpg.webp",
                  "alt_text": "",
                  "description": "",
                  "response_type": "image"
                },
                {
                  "title": "Vada Pav",
                  "source": "https://thatdeliciousdish.com/wp-content/uploads/2019/04/Vada-Pav-Recipe-thumbnail-800x840.jpg",
                  "alt_text": "",
                  "description": "",
                  "response_type": "image"
                },
                {
                  "options": [
                    {
                      "label": "Puran Poli",
                      "value": {
                        "input": {
                          "text": "Puran Poli"
                        }
                      }
                    },
                    {
                      "label": "Vada Pav",
                      "value": {
                        "input": {
                          "text": "Vada Pav"
                        }
                      }
                    },
                    {
                      "label": "Bakarbari",
                      "value": {
                        "input": {
                          "text": "Bakarbari"
                        }
                      }
                    },
                    {
                      "label": "Samosa",
                      "value": {
                        "input": {
                          "text": "Samosa"
                        }
                      }
                    },
                    {
                      "label": "Missel Pao",
                      "value": {
                        "input": {
                          "text": "Missel Pao"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_15576",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_570",
            "condition": {
              "eq": [
                {
                  "variable": "step_153"
                },
                {
                  "value": "Maharashtrian cuisine",
                  "from_entity": "entity_3290"
                }
              ]
            },
            "next_step": "step_421"
          },
          {
            "step": "step_421",
            "output": {
              "generic": [
                {
                  "title": "Ada Chaa",
                  "source": "https://budleaf.com/wp-content/uploads/2023/08/Adrak-masala-chai-1536x1024.jpeg",
                  "alt_text": "",
                  "description": "",
                  "response_type": "image"
                },
                {
                  "title": "Bhaat & Kosha Mangsho",
                  "source": "https://www.crazymasalafood.com/wp-content/images/mangsho-bhaat.jpg.webp",
                  "alt_text": "",
                  "description": "",
                  "response_type": "image"
                },
                {
                  "options": [
                    {
                      "label": "Bhaat & Kosha Mangsho",
                      "value": {
                        "input": {
                          "text": "Bhaat & Kosha Mangsho"
                        }
                      }
                    },
                    {
                      "label": "Bhaat, Dal, & Aloo bhaja",
                      "value": {
                        "input": {
                          "text": "Bhaat, Dal, & Aloo bhaja"
                        }
                      }
                    },
                    {
                      "label": "Kolkata Biryani",
                      "value": {
                        "input": {
                          "text": "Kolkata Biryani"
                        }
                      }
                    },
                    {
                      "label": "Ada Chaa",
                      "value": {
                        "input": {
                          "text": "Ada Chaa"
                        }
                      }
                    },
                    {
                      "label": "Machh-Bhaat",
                      "value": {
                        "input": {
                          "text": "Machh-Bhaat"
                        }
                      }
                    },
                    {
                      "label": "Luchi-Aloor Dum",
                      "value": {
                        "input": {
                          "text": "Luchi-Aloor Dum"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_45312",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_421",
            "condition": {
              "eq": [
                {
                  "variable": "step_153"
                },
                {
                  "value": "Bengali cuisine",
                  "from_entity": "entity_3290"
                }
              ]
            },
            "next_step": "step_255"
          },
          {
            "step": "step_255",
            "output": {
              "generic": [
                {
                  "title": "Chole Bhature",
                  "source": "https://assets.gqindia.com/photos/5e13119f28dff200080a598d/master/pass/top-image.jpg",
                  "alt_text": "",
                  "description": "",
                  "response_type": "image"
                },
                {
                  "title": "Butter Chicken with Paratha",
                  "source": "https://coursehorse.imgix.net/images/course/390/main/muktis_kitchen_596765a1d2dec.png?auto=format%2Cenhance%2Ccompress&crop=entropy&fit=crop&h=630&ixlib=php-1.2.1&q=90&w=1200",
                  "alt_text": "",
                  "description": "",
                  "response_type": "image"
                },
                {
                  "options": [
                    {
                      "label": "Chole Bhature",
                      "value": {
                        "input": {
                          "text": "Chole Bhature"
                        }
                      }
                    },
                    {
                      "label": "Butter Chicken & Paratha",
                      "value": {
                        "input": {
                          "text": "Butter Chicken & Paratha"
                        }
                      }
                    },
                    {
                      "label": "Sarson ka Saag with Makke ki Roti",
                      "value": {
                        "input": {
                          "text": "Sarson ka Saag with Makke ki Roti"
                        }
                      }
                    },
                    {
                      "label": "Palak Paneer with Tandoori Roti",
                      "value": {
                        "input": {
                          "text": "Palak Paneer with Tandoori Roti"
                        }
                      }
                    },
                    {
                      "label": "Dal Makhani with Romali Roti",
                      "value": {
                        "input": {
                          "text": "Dal Makhani with Romali Roti"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_28616",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_255",
            "condition": {
              "eq": [
                {
                  "variable": "step_153"
                },
                {
                  "value": "North Indian cuisine",
                  "from_entity": "entity_3290"
                }
              ]
            },
            "next_step": "step_746"
          },
          {
            "step": "step_746",
            "output": {
              "generic": [
                {
                  "title": "Dosa",
                  "source": "https://media.cntraveller.in/wp-content/uploads/2020/05/dosa-recipes-1366x768.jpg",
                  "alt_text": "",
                  "description": "",
                  "response_type": "image"
                },
                {
                  "title": "Idli-Sambar",
                  "source": "https://static.toiimg.com/photo/68631114.cms",
                  "alt_text": "",
                  "description": "",
                  "response_type": "image"
                },
                {
                  "options": [
                    {
                      "label": "Dosa",
                      "value": {
                        "input": {
                          "text": "Dosa"
                        }
                      }
                    },
                    {
                      "label": "Idli-Sambar",
                      "value": {
                        "input": {
                          "text": "Idli-Sambar"
                        }
                      }
                    },
                    {
                      "label": "Uttapam",
                      "value": {
                        "input": {
                          "text": "Uttapam"
                        }
                      }
                    },
                    {
                      "label": "Poha",
                      "value": {
                        "input": {
                          "text": "Poha"
                        }
                      }
                    },
                    {
                      "label": "Payasam",
                      "value": {
                        "input": {
                          "text": "Payasam"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_22214",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_746",
            "condition": {
              "eq": [
                {
                  "variable": "step_153"
                },
                {
                  "value": "South Indian cuisine",
                  "from_entity": "entity_3290"
                }
              ]
            },
            "next_step": "step_461"
          },
          {
            "step": "step_461",
            "output": {
              "generic": [
                {
                  "title": "Drums of Heaven",
                  "source": "https://th.bing.com/th/id/OIP.UtsWQs6LUM4hFhjdHRu1QwHaFj?rs=1&pid=ImgDetMain",
                  "alt_text": "",
                  "description": "",
                  "response_type": "image"
                },
                {
                  "title": "Dimsums",
                  "source": "https://th.bing.com/th/id/R.56859e3beae317894957823199428012?rik=o4P5qVCox1e3AA&riu=http%3a%2f%2fwww.thetowndish.com%2fwp-content%2fuploads%2f2017%2f01%2fDim-Sum-House-soup-dumpling.jpg&ehk=8yFz%2bgjOLXJeie5RetzpxWNXJkd4J1KQzefKKBfruRo%3d&risl=&pid=ImgRaw&r=0",
                  "alt_text": "",
                  "description": "",
                  "response_type": "image"
                },
                {
                  "options": [
                    {
                      "label": "Fried Rice with Chilli Chicken",
                      "value": {
                        "input": {
                          "text": "Fried Rice with Chilli Chicken"
                        }
                      }
                    },
                    {
                      "label": "Mixed Chowmein",
                      "value": {
                        "input": {
                          "text": "Mixed Chowmein"
                        }
                      }
                    },
                    {
                      "label": "Chicken Spring Rolls",
                      "value": {
                        "input": {
                          "text": "Chicken Spring Rolls"
                        }
                      }
                    },
                    {
                      "label": "Chicken Dimsums with Sweet and Sour soup",
                      "value": {
                        "input": {
                          "text": "Chicken Dimsums with Sweet and Sour soup"
                        }
                      }
                    },
                    {
                      "label": "Drums of Heaven",
                      "value": {
                        "input": {
                          "text": "Drums of Heaven"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_21835",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_461",
            "condition": {
              "eq": [
                {
                  "variable": "step_153"
                },
                {
                  "value": "Chinese cuisine",
                  "from_entity": "entity_3290"
                }
              ]
            },
            "next_step": "step_636"
          },
          {
            "step": "step_636",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Can I get your contact number and address?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_636",
            "next_step": "step_114"
          },
          {
            "step": "step_114",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Hey "
                          },
                          {
                            "skill_variable": "Name_input"
                          },
                          {
                            "scalar": ", is the following address correct?\n\n\n\n"
                          },
                          {
                            "skill_variable": "Address_input"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_114",
            "next_step": "step_314"
          },
          {
            "step": "step_314",
            "output": {
              "generic": [
                {
                  "title": "Scan to pay",
                  "source": "https://cdn.britannica.com/17/155017-050-9AC96FC8/Example-QR-code.jpg?w=300",
                  "alt_text": "",
                  "description": "",
                  "response_type": "image"
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_314",
            "condition": {
              "eq": [
                {
                  "variable": "step_114"
                },
                {
                  "scalar": "yes"
                }
              ]
            },
            "next_step": "step_880"
          },
          {
            "step": "step_880",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Thanks for placing your order "
                          },
                          {
                            "skill_variable": "Name_input"
                          },
                          {
                            "scalar": "! Our delivery executive will contact you soon."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_880",
            "condition": {
              "eq": [
                {
                  "variable": "step_314"
                },
                {
                  "scalar": "yes"
                }
              ]
            }
          }
        ],
        "title": "Hello",
        "action": "action_44014",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_44014_intent_42411"
        },
        "variables": [
          {
            "title": "Hey {variable}, is the following address correct? {variable}",
            "privacy": {
              "enabled": false
            },
            "variable": "step_114",
            "data_type": "yes_no"
          },
          {
            "title": "Hi {variable}! What can I order for you?",
            "privacy": {
              "enabled": false
            },
            "variable": "step_153",
            "data_type": "any"
          },
          {
            "title": "Hey there! Welcome to our service! I am bhukkar the foodbot, her",
            "privacy": {
              "enabled": false
            },
            "variable": "step_250",
            "data_type": "any"
          },
          {
            "title": "",
            "privacy": {
              "enabled": false
            },
            "variable": "step_255",
            "data_type": "any"
          },
          {
            "title": "",
            "privacy": {
              "enabled": false
            },
            "variable": "step_314",
            "data_type": "yes_no"
          },
          {
            "title": "",
            "privacy": {
              "enabled": false
            },
            "variable": "step_421",
            "data_type": "any"
          },
          {
            "title": "",
            "privacy": {
              "enabled": false
            },
            "variable": "step_461",
            "data_type": "any"
          },
          {
            "title": "Following are our delicious Maharashtrian food:",
            "privacy": {
              "enabled": false
            },
            "variable": "step_570",
            "data_type": "any"
          },
          {
            "title": "Can I get your contact number and address?",
            "privacy": {
              "enabled": false
            },
            "variable": "step_636",
            "data_type": "any"
          },
          {
            "title": "",
            "privacy": {
              "enabled": false
            },
            "variable": "step_746",
            "data_type": "any"
          },
          {
            "title": "Thanks for placing your order {variable}! Our delivery executive",
            "privacy": {
              "enabled": false
            },
            "variable": "step_880",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      }
    ],
    "intents": [
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "Call agent"
          },
          {
            "text": "Agent help"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "I would like to speak to someone"
          }
        ],
        "description": "Please transfer me to an agent"
      },
      {
        "intent": "action_44014_intent_42411",
        "examples": [
          {
            "text": "Hello"
          },
          {
            "text": "Namaste"
          },
          {
            "text": "Hi"
          },
          {
            "text": "Hey"
          },
          {
            "text": "Hola"
          },
          {
            "text": "Hey whatsapp"
          }
        ]
      }
    ],
    "entities": [
      {
        "entity": "entity_3290",
        "values": [
          {
            "type": "synonyms",
            "value": "South Indian cuisine",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Chinese cuisine",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Maharashtrian cuisine",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Bengali cuisine",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "North Indian cuisine",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_22214",
        "values": [
          {
            "type": "synonyms",
            "value": "Dosa",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Payasam",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Poha",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Uttapam",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Idli-Sambar",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_21835",
        "values": [
          {
            "type": "synonyms",
            "value": "Chicken Dimsums with Sweet and Sour soup",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Mixed Chowmein",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Fried Rice with Chilli Chicken",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Chicken Spring Rolls",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Drums of Heaven",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "profane_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "sys-yes-no",
        "values": []
      },
      {
        "entity": "entity_28616",
        "values": [
          {
            "type": "synonyms",
            "value": "Sarson ka Saag with Makke ki Roti",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Dal Makhani with Romali Roti",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Chole Bhature",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Butter Chicken & Paratha",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Palak Paneer with Tandoori Roti",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "danger_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "entity_45312",
        "values": [
          {
            "type": "synonyms",
            "value": "Luchi-Aloor Dum",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Machh-Bhaat",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Ada Chaa",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Kolkata Biryani",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Bhaat, Dal, & Aloo bhaja",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Bhaat & Kosha Mangsho",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_15576",
        "values": [
          {
            "type": "synonyms",
            "value": "Missel Pao",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Samosa",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Bakarbari",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Vada Pav",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Puran Poli",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      },
      "skill": {
        "counts": {
          "actions": 5,
          "intents": 2,
          "entities": 9,
          "data_types": 0,
          "collections": 0,
          "global_variables": 2
        }
      }
    },
    "variables": [
      {
        "title": "Address input",
        "privacy": {
          "enabled": false
        },
        "variable": "Address_input",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "Name input",
        "privacy": {
          "enabled": false
        },
        "variable": "Name_input",
        "data_type": "string",
        "description": ""
      }
    ],
    "data_types": [],
    "collections": [],
    "counterexamples": [],
    "system_settings": {
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "off_topic": {
        "enabled": true
      },
      "auto_learn": {
        "apply": true
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "enable_confirmation": true,
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "I'm sorry, I did not catch that, please confirm."
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to continue with the previous topic: "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              },
              {
                "options": [
                  {
                    "label": "Yes",
                    "value": {
                      "input": {
                        "text": "Yes"
                      }
                    }
                  },
                  {
                    "label": "No",
                    "value": {
                      "input": {
                        "text": "No"
                      }
                    }
                  }
                ],
                "response_type": "option",
                "repeat_on_reprompt": true
              }
            ]
          }
        },
        "max_tries": 3
      },
      "generative_ai": {
        "slot_filling": {
          "enabled": false
        }
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "Connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "search_routing": {
        "target": "conversational_search"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": false,
    "language": "en"
  },
  "description": "created for assistant 0050a70d-8ec3-4ee4-b732-9df3a9b98844",
  "dialog_settings": {
    "source_assistant": "d28eff4d-5d9c-4965-9168-d674998125ba"
  },
  "created": "2024-11-29T10:18:47.125Z",
  "updated": "2024-11-29T10:18:47.125Z",
  "snapshot": "1",
  "assistant_id": "0050a70d-8ec3-4ee4-b732-9df3a9b98844",
  "assistant_references": []
}